# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="$application_secret;format="random"$"

# The application languages
# ~~~~~
application.langs="en,ru"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

application.router=Routes
application.global=com.gradoservice.geoportal.Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# Default to Routes in the root package.
# application.routers=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=

db.default.driver=org.postgresql.Driver

db.default.url="jdbc:postgresql://host:port/databaseName"
db.default.user=
db.default.password=

db.default.idleMaxAge=0 minute
db.default.logStatements=true
db.default.partitionCount=1
db.default.maxConnectionsPerPartition=5
db.default.minConnectionsPerPartition=2
db.default.preferredTestQuery = "SELECT 1;"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled
ebean.default="models.*,models.ebean.ScalarGeometry,models.ebean.ScalarBox2d"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

#---------Base Config---------------------
demo.userId = 1
demo.mapExtentId = 1
#http://hostname
base.host = 
application.title = ""
application.mobileHeaderRegexp="iPhone|iPod|iPad|Android|BlackBerry"
application.logo.show = true
application.logo.showInFrame = true
application.logo.showInPrint = true
application.logo.path = "/public/images/logo.png"
application.favicon.path = "/public/images/faviconGradoservice.png"
application.index.template = "views.html.main"
#host of mapAdmin 
base.sscHost = 

#---------Mobile---------------------
mobile.desktopIcon.path = "/statics/logo/mobile/GradoserviceIcon.png"

# ------- Deadbolt -------
deadbolt.java.handler=security.RepoDeadboltHandler
deadbolt.cache-user=true

# ------- Cache -------
cache.outputHeader.cacheControl.maxAge=1h
cache.lifetime.files = 30m
cache.layerInfo = 30m
cache.lifetime.uploaded = 1h
cache.lifetime.reports = 24h
cache.lifetime.map.configuration = 24h

# ------- Files -------
files.layer.maxsize = "1024mb"

#----- BaseLayers --------
map.baseLayers.schema = [
    {"Карта Градосервиса": "new M.TileLayer('http://basemap.geo4.me/worldmap/{z}/{x}/{y}.png', {subdomains: '', attribution: 'ООО \"ГрадоСервис\" 2015'})"},
    {"OpenStreetMaps": "new M.TileLayer.OpenStreetMap()"},
    {"Яндекс": "new M.Yandex()"},
    {"Google": "new M.Google('ROADMAP')"}
]

map.baseLayers.space = [
    {"Космоснимки Роскосмос": "new M.TileLayer('http://geoportal.ntsomz.ru/get_tile_external.php?x={x}&y={y}&scale={z}')"},
    {"Космоснимки Сканекс": "new M.Kosmosnimki()"},
    {"Яндекс": "new M.Yandex('hybrid')"},
    {"Google": "new M.Google('HYBRID')"}
]

# ------- Map -------
application.map.center.lat = 55.37911044801047
application.map.center.lng = 88.681640625
application.map.zoom = 3

# ----- WFS style --------
wfs.style.wfsDoubleSize = false

# ----- FeatureInfo request --------
wms.getFeatureInfo.buffer = 100
wms.getFeatureInfo.featureCount = 30

# ----- WFS GetFeature request --------
wfs.getFeature.maxFeatures = 30

# ----- Statics Path --------
statics.path = "/srv/geoportal/statics"

# ----- Html Bottom Block Path --------
#htmlBlock.path = "/srv/geoportal/blocksHtml"
#htmlBlock.upper.name = "block-upper.html"
#htmlBlock.lower.name = "block-lower.html"
#htmlBlock.upper.show.inFrame = true
#htmlBlock.lower.show.inFrame = true
#htmlBlock.upper.show.inPrint = true
#htmlBlock.lower.show.inPrint = true


#----playRedmine-----
redmine.enabled = false
redmine.projectId = ""
redmine.host = "http://forge.gradoservice.ru"
redmine.apikey = ""
redmine.buildClass  = "org.gradoservice.GeoPortal.BuildInfo"

#-----GeoserverRequest----
#in milliseconds
geoserver.request.timeout = 30000

#--------Java Script----------
javascript.geoportal.tab.pages = 10
javascript.geoportal.notAuthUser.exportData.show = false
javascript.geoportal.excludeFields = {}

#--------Java----------
modules.list = "$application_name$"

#--------Documentation----------
documentation.logo.path = "/public/images/docs/logotip.png"

#-------GeoCoding---------------
#geocoding.additional = "models.geoSearch.GeoCodingProchar"
geocoding.limit = 20

#---------ShortenerUrl-------------
consumer.id =  ""
shortener.service = "models.shortenerURL.Geo4meShortenerUrl"
shortener.geo4me.url = "http://geo4.me/rest/links/add"

#---------GeoServer Default-------------
default.datastore.id = 21

#---------Connection to remote DataBase-------------
remote.db.maxPoolSize = 2
remote.db.minPoolSize = 2
remote.db.initialPoolSize = 1
remote.db.acquireIncrement = 1
remote.db.acquireRetryAttempts = 3
remote.db.maxIdleTime = 5m
remote.db.maxConnectionAge = 50m
remote.db.idleConnectionTestPeriod = 5m
remote.db.preferredTestQuery = "SELECT 1"
remote.db.checkoutTimeout = 5m


# ----------Web Socket --------------
application.useWebsocketOverHttp=false
application.useSSl=false
application.http.port=9000


# ----------Coverage --------------
coverage.local.path="/srv/geoportal/coverages"

 # ----------Local rendering --------------
render.metaTile.size=4
render.metaTile.cache.lifetime=5m

# ----------Shape --------------
layers.upload.shape.encoding="cp1251"

# ----------Infrastucture --------------
infrastructure.user.window.name="MapEditor"


# ----------User-----------
user.role.admin.id=10
user.roles.simple.mode=false
user.organization.default.id=1

# ----------DataStore------------
datastore.view=true

# ----------Report------------
report.view=true

# ----------Organizations------------
organization.view=true

#-----------ExportData--------------
layer.export.withGeom=false

#-----------UrlLayer--------------
layer.objects.frame.size.small=[560,315]
layer.objects.frame.size.medium=[640,360]
layer.objects.frame.size.large=[853,480]

#----------LayerAccess------------
layer.access.inmemory.refresh=8h
layer.access.isStorageDirty.inmemory=3m

#------Elastic Dispatcher--------------
elastic.dispatcher.poolsize = 5

# диспатчер - балансер пула акторов ElasticDispatcher
elastic-pool-dispatcher {
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 2
    core-pool-size-factor = 2.0
    core-pool-size-max = 10
  }
  throughput = 100
}

elastic.actor.elements_for_check.layers.count=20
elastic.actor.elements_for_check.features.count=50
elastic.actor.check_is_dirty=1m
elastic.actor.refresh=24h

#------Elastic Search--------------
elastic.cluster.name="elasticsearch"
elastic.address="127.0.0.1"
elastic.port=9300
elastic.ws.port=9200


#--------FolderMessages--------------
defaultmessagesplugin=disabled
foldermessagesplugin=enabled
messages.path="i18n"


#-------simple----------
simplemode=false



